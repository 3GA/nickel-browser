---
 printing/backend/print_backend_cups.cc |   15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

Index: src/printing/backend/print_backend_cups.cc
===================================================================
--- src.orig/printing/backend/print_backend_cups.cc
+++ src/printing/backend/print_backend_cups.cc
@@ -44,20 +44,29 @@
   GcryptInitializer() {
     Init();
   }
 
  private:
   void Init() {
     gcry_control(GCRYCTL_SET_THREAD_CBS, &gcry_threads_pthread);
     const char* kGnuTlsFile = "libgnutls.so";
-    void* gnutls_lib = dlopen(kGnuTlsFile, RTLD_NOW);
+    const char* kGnuTlsFile26 = "libgnutls.so.26"; // Since Ubuntu Intrepid (8.10)
+    const char* kGnuTlsFile13 = "libgnutls.so.13"; // Last seen in Ubuntu Hardy (8.04)
+    void* gnutls_lib = dlopen(kGnuTlsFile26, RTLD_NOW);
     if (!gnutls_lib) {
-      LOG(ERROR) << "Cannot load " << kGnuTlsFile;
-      return;
+      gnutls_lib = dlopen(kGnuTlsFile13, RTLD_NOW);
+      if (!gnutls_lib) {
+        gnutls_lib = dlopen(kGnuTlsFile, RTLD_NOW);
+        if (!gnutls_lib) {
+          LOG(ERROR) << "Cannot load any of " << kGnuTlsFile26 << ", "
+                     << kGnuTlsFile13 << " or " << kGnuTlsFile;
+          return;
+        }
+      }
     }
     const char* kGnuTlsInitFuncName = "gnutls_global_init";
     int (*pgnutls_global_init)(void) = reinterpret_cast<int(*)()>(
         dlsym(gnutls_lib, kGnuTlsInitFuncName));
     if (!pgnutls_global_init) {
       LOG(ERROR) << "Could not find " << kGnuTlsInitFuncName
                  << " in " << kGnuTlsFile;
       return;
